name: Deploy to InstaWP

on:
  workflow_dispatch:
    inputs:
      instawp_url:
        description: 'InstaWP site URL to deploy to (e.g. qliro-sandbox.krokedil.site).'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PLUGIN_SLUG: klarna-checkout-for-woocommerce

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # Build the plugin with dev dependencies to scope the dependency packages.
    - name: Composer Install (Dev)
      run: composer install

    # Build the plugin for release.
    - name: Composer Install (Prod)
      run: composer install --no-dev

    - name: Define variables branch name, commit hash and zip file name
      id: vars
      run: |
        BRANCH_NAME="${GITHUB_REF_NAME:-${GITHUB_REF#refs/heads/}}"
        COMMIT_HASH="${GITHUB_SHA:0:7}"
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV
        echo "ZIP_FILE_NAME=${{ env.PLUGIN_SLUG }}-dev-${BRANCH_NAME}-${COMMIT_HASH}-temp" >> $GITHUB_OUTPUT

    - name: Attach branch name and commit hash to plugin version
      run: |
        sed -i "s/^ \* Version: \(.*\)/ \* Version: \1-dev.${BRANCH_NAME}.${COMMIT_HASH}/" ${{ env.PLUGIN_SLUG }}.php

    - name: Generate and upload plugin zip
      uses: krokedil/action-wordpress-plugin-build-zip@krokedil-improvements
      id: generate_and_upload_zip
      env:
        SLUG: ${{ env.PLUGIN_SLUG }}
      with:
        retention-days: 5 # Optional; defaults to 5
        artifact-name: ${{ steps.vars.outputs.ZIP_FILE_NAME }} # Optional; defaults to the repository name
        upload-plugin-artifact: true # Optional; defaults to true

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_KROKEDIL_PLUGIN_DEV_ZIP }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_KROKEDIL_PLUGIN_DEV_ZIP }}
        aws-region: eu-north-1

    - name: Upload to S3
      run: |
        cd ${{ steps.generate_and_upload_zip.outputs.zipfile-path }}
        zip -r ../${{ steps.vars.outputs.ZIP_FILE_NAME }}.zip ${{ env.PLUGIN_SLUG }}
        aws s3 cp ../${{ steps.vars.outputs.ZIP_FILE_NAME }}.zip s3://krokedil-plugin-dev-zip/${{ steps.vars.outputs.ZIP_FILE_NAME }}.zip

    - name: Deploy dev zip to existing InstaWP site or create a new one
      id: deploy_instawp
      env:
        INSTA_WP_URL: ${{ github.event.inputs.instawp_url }}
        INSTAWP_API_TOKEN: ${{ secrets.INSTAWP_API_TOKEN }}
        E2E_API_KEY: ${{ secrets.E2E_API_KEY }}
        E2E_API_SECRET: ${{ secrets.E2E_API_SECRET }}
        ZIP_FILE_NAME: ${{ steps.vars.outputs.ZIP_FILE_NAME }}
      run: |
        node .github/scripts/deploy-instawp.js

    - name: Delete zip from S3
      run: |
        aws s3 rm s3://krokedil-plugin-dev-zip/${{ steps.vars.outputs.ZIP_FILE_NAME }}

    - name: Add InstaWP deploy job summary
      env:
        INSTAWP_SITE_URL: ${{ steps.deploy_instawp.outputs.instawp_site_url }}
        INSTAWP_SITE_ID: ${{ steps.deploy_instawp.outputs.instawp_site_id }}
        INSTAWP_SITE_CREATED: ${{ steps.deploy_instawp.outputs.instawp_site_created }}
      run: |
        node .github/scripts/generate-instawp-deploy-job-summary.js