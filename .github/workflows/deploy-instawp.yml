name: Deploy to InstaWP

on:
  push:
    branches: ['**']
  workflow_dispatch:
    inputs:
      instawp_url:
        description: 'InstaWP site URL to deploy to (e.g. qliro-sandbox.krokedil.site).'
        required: false
        default: ''

jobs:
  plugin_meta:
    uses: ./.github/workflows/reusable-get-plugin-meta.yml

  build_zip:
    needs: plugin_meta
    uses: ./.github/workflows/reusable-build-dev-zip.yml
    with:
      plugin_slug: ${{ needs.plugin_meta.outputs.plugin_slug }}

  deploy:
    runs-on: ubuntu-latest
    needs: [plugin_meta, build_zip]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Deploy dev zip to existing InstaWP site or create a new one
        id: deploy_instawp
        env:
          INSTA_WP_URL: ${{ github.event.inputs.instawp_url }}
          INSTAWP_API_TOKEN: ${{ secrets.INSTAWP_API_TOKEN }}
          E2E_API_KEY: ${{ secrets.E2E_API_KEY }}
          E2E_API_SECRET: ${{ secrets.E2E_API_SECRET }}
          AWS_S3_PUBLIC_URL: ${{ needs.build_zip.outputs.aws_s3_public_url }}
          PLUGIN_META_JSON: ${{ needs.plugin_meta.outputs.plugin_meta_json }}
        run: |
          node .github/scripts/deploy-instawp.js

      - name: Delete zip from S3
        run: |
          aws s3 rm s3://krokedil-plugin-dev-zip/${{ needs.build_zip.outputs.zip_file_name }}.zip

      - name: Add InstaWP deploy job summary
        env:
          INSTAWP_SITE_URL: ${{ steps.deploy_instawp.outputs.instawp_site_url }}
          INSTAWP_SITE_ID: ${{ steps.deploy_instawp.outputs.instawp_site_id }}
          INSTAWP_SITE_CREATED: ${{ steps.deploy_instawp.outputs.instawp_site_created }}
        run: |
          node .github/scripts/job-summary-deploy-instawp.js